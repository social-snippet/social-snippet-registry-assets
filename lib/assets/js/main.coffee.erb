#= require require
#= require utils

@WEB_API_HOST     = "<%= ENV["SSPM_WEB_API_HOST"] || "api.server" %>"
@WEB_API_PROTOCOL = "https"
@WEB_API_VERSION  = "v0"

@WITH_LOCAL_STORAGE = <%= ENV["SSPM_WEB_API_HOST"] ? "false" : "true" %>

requirejs.config(
  baseUrl: "<%= assets_host %>/js"
  paths:
    "app": "<%= assets_host %>/js/app"
)

global = @

requirejs(
  [
    "jquery"
    "backbone"
    "underscore"
    "bootstrap"
    "app/app"
    "app/models"
    "app/collections"
    "<%= assets_host %>/bower/backbone.localStorage/backbone.localStorage.js"
  ]
  (
    jQuery
    Backbone
    _
    __bootstrap__
    App
    Models
    Collections
    __backbone_localstorage__
  )->
    add_model = (collection, model)->
      model.localStorage = collection.localStorage
      model.save()
      model

    create_fake_repos = ->
      repos = new Collections::Repositories []

      repo_1 = new Models::Repository
        name: "repo-1"
        desc: "this is repo 1"
        url: "https://github.com/user/repo-1"

      repo_2 = new Models::Repository
        name: "repo-2"
        desc: "this is repo 2"
        url: "https://github.com/user/repo-2"

      add_model repos, repo_1
      add_model repos, repo_2

    create_fake_search_results = ->
      repos = new Collections::SearchResults []

      repo_1 = new Models::Repository
        name: "found-repo-1"
        desc: "this is repo 1"
        url: "https://github.com/user/repo-1"

      repo_2 = new Models::Repository
        name: "found-repo-2"
        desc: "this is repo 2"
        url: "https://github.com/user/repo-2"

      add_model repos, repo_1
      add_model repos, repo_2

    create_fake_user_repos = ->
      repos = new Collections::UserRepositories []

      repo_1 = new Models::UserRepository
        name: "user/repo1"

      repo_2 = new Models::UserRepository
        name: "user/repo2"

      repo_3 = new Models::UserRepository
        name: "org/repo1"

      add_model repos, repo_1
      add_model repos, repo_2
      add_model repos, repo_3


    enable_localstorage = ->
      console.debug "enable local storage"

      _(Collections::Repositories::).extend
        localStorage: new Backbone.LocalStorage("repos")
      _(Collections::SearchResults::).extend
        localStorage: new Backbone.LocalStorage("search-results")
      _(Collections::UserRepositories::).extend
        localStorage: new Backbone.LocalStorage("user-repos")

      # create fake repos
      create_fake_repos()
      create_fake_search_results()
      create_fake_user_repos()

    enable_csrf_token = ->
      jQuery.ajaxSetup(
        headers:
          "X-CSRF-TOKEN": jQuery("meta[csrf_token]").attr("csrf_token")
      )

    entry_func = ->
      jQuery ->
        global.app = new App(
          regions:
            layout: "body"
        )
        Object.freeze(global.app)

        console.debug "start app"
        global.app.start()

    # start
    enable_csrf_token()
    if WITH_LOCAL_STORAGE
      enable_localstorage()
    entry_func()
)
